//
//  JSNetworking.h
//  HelloWordl
//
//  Created by lmg on 2019/4/30.
//  Copyright © 2019 lmg. All rights reserved.
//

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

@interface JSNetworking : NSObject
/*
 OSI七层模式：
 物理层，数据链路层，网络层，传输层，会话层，表示层，应用层
 
 
 TCP与UDP的区别：都属于传输层协议
 1.TCP是面相连接的，UDP是无连接的，即发送数据之前不需要建立连接
 2.TCP传输可靠，UDP传输不可靠
 3.TCP适合传输大量的数据，UDP适合少量数据
 4.TCP传输速度慢，UDP传输速度块
 5.TCP支持的应用层协议主要有：浏览器,电子邮件，文件传输系统，UDP支持的应用层协议：DNS，视频流，IP语音
 6.TCP是面向字节流的，UDP是面向报文的
 
 什么是面向字节流，什么是面向报文
 TCP把应用程序看成是一连串的无结构的字节流。TCP有一个缓存，当应用程序传送的数据块太长时，
 TCP就会把它划分短一些再传送，如果应用程序一次只发送一个字节，TCP也可以等待积累有足够多的
 字节后再构成报文段发送出去。
 UDP：面向报文的传输方式是应用层交给UDP多长的报文，UDP就照样发送，即一次发送一个报文。
 
 
 TCP的三次握手和四次挥手
 三次握手：
 1.客户端发送SYN（SEQ=x）报文给服务器，此时客户端处于SYN_SEND状态
 2.服务器收到SYN报文，回复一个SYN(SEQ=y)+ACK(ACK=x+1)报文，进入SYN_RECV状态
 3.客户端收到服务器的SYN报文，回应一个ACK(ACK=y+1)报文，此时双方进入Established状态
 
 四次挥手：
 1.某个应用程序首次调用close，称该端将主动关闭，该段的TCP发送一个FIN分节，表示自己数据发送完毕
 2.接受到FIN的对端执行“被动关闭”，它的TCP发送ACK
 3.一段时间后，接受到这个文件结束符的应用程序将调用close关闭它的socket，这导致它的TCP也发送一个FIN
 4.接受这个最终FIN的原发送端TCP确认这个FIN，发送ACK
 
 
 HTTP协议的组成和特性：
 HTTP请求由三部分组成L：请求头，消息报头，请求正文。
 HTTP的特性：
 1.支持客户/服务器模式
 2.简单快速，客户向服务器请求服务时，只需传送请求方法和路径，请求常用的方法有GET，POST，HEAD。每种方法规定了客户与服务器联系的类型不同。由于HTTP协议简单，使得HTTP服务器的程序规模小，因而通信速度很快。
 3.灵活，HTTP允许传输任意类型的数据对象。传输的类型对象由ContentType加以标记
 4.无连接，每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。
 5.无状态，HTTP协议是无状态协议。无状态是指协议对于实物处理没有记忆能力。缺少状态以为着后续处理需要前面的信息，则它必须重传，这样可能导致每次传送的数据量增大。另一方面，在服务器不需要先前信息时他的应答就较快。
 
 
 Socket:套接字
 网络上的两个程序通过一个双向的通信连接实现数据的交换，这个连接的一段称为一个Socket，
 建立网络连接至少需要一对端口号（scoket），socket本质是API，对TCP/IP协议族的封装，TCP/IP
 协议也要提供可供程序员做网络开发所用的接口，这就是Socket编程接口。
 
 
 HTTPS的加密过程
 1.客户端发起连接请求,把自己支持的SSL协议版本号，支持的加密算法，随机数random1
 2.服务端给客户端返回SSL协议版本号，加密算法种类，随机数random2等信息，同时也返回服务器端的证书，即公钥证书（包含公钥，证书信息，签名）
 3.客户端验证证书的有效性，主要验证以下几方面：
 证书是否过期
 证书是否可靠
 公钥能否正确解开返回证书中的数字签名
 证书上的域名和实际域名是否一样
 验证通过后继续通信，否则将终止
 
 4.客户端发送自己支持的对称加密方案，供服务器选择，服务器选择加密程度最高的加密方式，并将加方式以明文传递给客户端
 5.客户端根据服务器传回的加密方式生成随机数pre-master-secret，使用服务器返回的公钥m加密,发送加密后的秘钥（对称）给服务器
 6.服务器使用私钥进行解密，双方使用random1，random2，pre-master-secret根据一定的算法生成秘钥，此时双方都拥有了对称秘钥
 7.双方通过对称秘钥加密的密文通信
 
 
 网络层协议：IP，ARP，RARP
 传输层协议：TCP/UDP
 应用层协议：HTTP/FTP/TELNET/DNS
 
 HTTP是超文本传输协议，是客户端浏览器或其他程序与Web浏览器之间的应用层通信协议

 */
@end

NS_ASSUME_NONNULL_END
