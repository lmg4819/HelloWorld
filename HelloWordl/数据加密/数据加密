

对称加密：加密和解密用同一个秘钥
非对称加密：加密和解密使用一对非对称的秘钥，一把为公钥，一把为私钥
HTTPS采用了对称加密和非对称加密：在交换秘钥阶段使用非对称秘钥加密方式，之后建立通信交换报文阶段
使用对称秘钥加密方式。
如何保证公钥就是原本预想的服务器发行的公开秘钥，或许在公钥传输过程中，真正的公钥已经被攻击者替换掉了，为了解决这个问题，可以使用证书认证机构颁发的公钥证书

证书的合法性由证书签发机构来判断
证书包含：公钥，各种信息，签名（签名是服务器用私钥对各种信息加密后的数据，使用公钥对签名进行解密，然后和各种信息做比较就可以校验出证书的合法性）

客户端内置真正的公钥来解决中间人攻击
中间人攻击第一种
代理服务器只是劫持了客户端发出的请求，然后将请求发送给真正的服务器，
服务器将证书发送回来，这种代理服务器对于HTTPS请求无法产生影响，获取的是加密后的数据

中间人攻击第二种
客户端sayhello后，代理服务器有自己的CA证书，把自己的合法证书发送给客户端，客户端校验通过后，使用共要加密自己生成的随机秘钥并发送给给代理服务器，代理服务器把sayhello信息发送给真正的服务器，真正的服务器把证书发送给代理服务器，代理服务器校验通过后，把客户端真正的数据发送给服务器，真正的服务器使用私钥解密获取到客户端的秘钥，此时代理服务器作为客户端和真正的服务器建立了合法的通信。客户端在校验了代理服务器的证书后也建立了合法的通信，这个时候，代理服务器作为中间人，因为它有自己的私钥和真正的公钥，可以欺上瞒下，俩边的信息都从它这里过了一次，信息被它偷窥到。攻击成功。

客户端内置真正的公钥，当代理服务器把自己的证书传过来的时候，客户端用内置的公钥去解密证书中的签名，因为不是真正的私钥加密的所以校验失败，连接中断，这就是客户端信任所有的证书的风险---被中间人攻击

对称加密:速度高，可加密内容较大，用来加密会话过程中的消息
公钥加密：加密速度较慢，但能提供更好的身份认证技术，用来加密对称加密的秘钥

单向认证：
1.客户端向服务器发送SSL协议版本号，加密算法种类，随机数random1等信息
2。服务端给客户端返回SSL协议版本号，加密算法种类，随机数random2等信息，同时也返回服务器端的证书，即公钥证书（包含公钥，证书信息，签名）
3.客户端使用服务器返回的信息验证服务器的合法性，包括：
1.证书是否过期，
2.服务器发送的ca证书是否可靠
3.返回的公钥是否能正确解开返回证书中的数字签名
4.服务器证书上的域名是否和服务器的实际域名相匹配
验证通过后，将继续进行通信，否则，终止通信
4.客户端向服务器发送自己所能支持的对称加密方案，供服务器进行选择
5.服务器在客户端提供的加密方案中选择加密程度最高的加密方式
6.服务器将选择好的加密方案通过明文方式返回给客户端
7。客户端接收到服务器返回的加密方式后，使用该加密方式生成产生随机码pre-master secret，使用服务器返回的公钥进行加密,将加密后的随机码发送至服务器。
8。服务器收到客户端返回的加密信息后，使用自己的私钥进行解密，获取随机码pre-master-secret，客户端和服务器根据random1,random2,pre-master-secret通过一定的算法生成对称秘钥,在接下来的会话中，客户端和服务器将会使用该秘钥进行对称加密，保证通信过程中信息的安全

使用场景：



双向认证：
1.客户端向服务器发送SSL协议版本号，加密算法种类，随机数random1等信息
2。服务端给客户端返回SSL协议版本号，加密算法种类，随机数random2等信息，同时也返回服务器端的证书，即公钥证书（包含公钥，证书信息，签名）
3.客户端使用服务器返回的信息验证服务器的合法性，包括：
1.证书是否过期，
2.服务器发送的ca证书是否可靠
3.返回的公钥是否能正确解开返回证书中的数字签名
4.服务器证书上的域名是否和服务器的实际域名相匹配
验证通过后，将继续进行通信，否则，终止通信
//4.服务器要求客户端发送客户端的证书，客户端会将自己的证书发送至服务器
//5.服务器验证客户端的证书，通过验证后，会获得客户端的公钥

6.客户端向服务器发送自己所能支持的对称加密方案，供服务器进行选择
7.服务器在客户端提供的加密方案中选择加密程度最高的加密方式
//8.服务器将选择好的加密方案通过之前获取到的公钥进行加密，返回给客户端
//9。客户端接收到服务器返回的加密方式密文后，使用自己的私钥进行解密，获取具体加密方式，使用该加密方式生成产生随机码pre-master secret，使用服务器返回的公钥进行加密,将加密后的随机码发送至服务器。
8。服务器收到客户端返回的加密信息后，使用自己的私钥进行解密，获取随机码pre-master-secret，客户端和服务器根据random1,random2,pre-master-secret通过一定的算法生成对称秘钥,在接下来的会话中，客户端和服务器将会使用该秘钥进行对称加密，保证通信过程中信息的安全







自签名的证书无法被吊销，CA签名的证书可以被吊销，能不能被吊销的区别在于，如果你的私钥被黑客获取，如果证书不能被吊销，则黑客可以伪装你与用户进行通信。


SSL Pinning:证书绑定，是指客户端直接保存服务器的证书拷贝
AFSSLPinningModeNone：默认的认证方式，只会在系统的信任的证书列表中对服务器返回的证书进行验证。
AFSSLPinningModeCertificate:需要客户端预先保留服务器的证书
AFSSLPinningModePublicKey：也需要客户端预先保留服务器的证书，但是这里只会验证证书中的公钥是否正确。
